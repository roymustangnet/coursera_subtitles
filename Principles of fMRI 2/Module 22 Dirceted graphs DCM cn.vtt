WEBVTT

1
00:00:01.770 --> 00:00:02.650
Hi.
在本讲中,

2
00:00:02.650 --> 00:00:06.330
我们要谈一点
关于动态因果建模，或DCM。

3
00:00:06.330 --> 00:00:10.650
我们会尝试理解一点
更多关于它背后的数学。

4
00:00:10.650 --> 00:00:16.600
DCM尝试使用血液动力学时间序列，对潜在的神经​​元
活动进行建模。

5
00:00:16.600 --> 00:00:19.560
该模型是建立在感兴趣区的神经模型基础之上的

6
00:00:19.560 --> 00:00:22.500
同时用一个前馈模型（forward model）

7
00:00:22.500 --> 00:00:26.170
来解释神经活动是如何转换为观察到的血流动力学响应


8
00:00:27.320 --> 00:00:31.180
所以，可以根据不同区域的潜在神经活动的耦合，
对有效连接进行参数化

9
00:00:31.180 --> 00:00:34.660
我们可以通过扰动系统和测量响应

10
00:00:34.660 --> 00:00:37.280
来对这些参数进行估计

11
00:00:38.840 --> 00:00:42.910
这里有一个小插图，图中有两个区域，区域1和区域2

12
00:00:42.910 --> 00:00:47.460
并且，两个区域之间存在某种关系，z1表示

13
00:00:47.460 --> 00:00:52.140
区域1中的神经元活动，
Z2表示区域2中的神经元活动。

14
00:00:52.140 --> 00:00:57.720 
我们看到区域1中的激活引起了
区域2中的激活，反之亦然。

15
00:00:57.720 --> 00:01:01.170
这是一个用于描述两个不同大脑区域情况

16
00:01:01.170 --> 00:01:01.790
非常简单的模型。

17
00:01:02.960 --> 00:01:07.685
然而，现在的问题
是我们无法使用fMRI

18
00:01:07.685 --> 00:01:11.650
来测量神经元活动，所以
我们必须做点别的事。


19
00:01:11.650 --> 00:01:13.710
所以我们对系统进行一些干扰


20
00:01:13.710 --> 00:01:17.350
假设我们有某种任务

21
00:01:17.350 --> 00:01:20.000
它会产生如下的扰动

22
00:01:20.000 --> 00:01:24.753
u1干扰了Z1，因此可能会增加神经元的活动。

23
00:01:24.753 --> 00:01:29.360
u2改变了区域1和区域2之间的关系

24
00:01:30.760 --> 00:01:33.410
一旦我们这么做了以后，这些扰动就会

25
00:01:33.410 --> 00:01:37.400
引起血液动力学响应的变化，而这是我们可以测量的

26
00:01:37.400 --> 00:01:41.610
所以这里的想法是，
神经活动的变化引起了血流动力学响应的变化

27
00:01:41.610 --> 00:01:46.570
此时，我们可以用fMRI来测量
这些（血流动力学响应）变化。

28
00:01:48.690 --> 00:01:52.810
我们现在的目标是根据测量得到的y1和y2

29
00:01:52.810 --> 00:01:55.360
弄清楚到底在神经元水平上
发生了什么

30
00:01:57.910 --> 00:02:00.330
为了做到这一点，
我们必须进行一些定义。

31
00:02:00.330 --> 00:02:03.060
我们将神经元状态定义为z。

32
00:02:03.060 --> 00:02:07.190
z包括z1，z2，一直到zN，
N表示有N个不同的区域

33
00:02:07.190 --> 00:02:10.240
在我们的示例中，我们有两个区域，
此时z=[z1,z2]。

34
00:02:12.200 --> 00:02:16.660
下面的模型描述了有效连接模型

35
00:02:16.660 --> 00:02:20.003
这个双线性方程（bi-linear equation）告诉我们

36
00:02:20.003 --> 00:02:23.747
t时刻神经元的活动是如何变化的。

37
00:02:23.747 --> 00:02:28.368
这里z_t是t时刻的神经元活动，它是潜在的（不可见的）。

38
00:02:28.368 --> 00:02:33.075
u_t(j)是t时刻第j个输入

39
00:02:33.075 --> 00:02:36.975
这些（输入）是已知的，
因为我们知道我们对系统做了什么

40
00:02:36.975 --> 00:02:40.055
矩阵A表示在没有输入的情况下

41
00:02:40.055 --> 00:02:41.925
不同区域间的一阶连通。

42
00:02:41.925 --> 00:02:44.545
这指定了区域是如何连接的，

43
00:02:44.545 --> 00:02:46.439
以及这些连接是单向还是双向的。

44
00:02:48.040 --> 00:02:51.890
矩阵C表示输入对神经元活动的内在影响

45
00:02:51.890 --> 00:02:52.890


46
00:02:52.890 --> 00:02:57.640
它表示输入是如何连接到不同区域的。

47
00:02:57.640 --> 00:03:00.110
矩阵B^j

48
00:03:00.110 --> 00:03:02.890
表示第j个输入引起的耦合（连接）变化。

49
00:03:02.890 --> 00:03:06.659
这也指明了连接是
如何被输入改变的


50
00:03:08.170 --> 00:03:12.130
我们再通过之前的那个简单的例子，
来看看出这些方程是如何工作的。

51
00:03:12.130 --> 00:03:13.690
如果我们这么做的话，

52
00:03:13.690 --> 00:03:17.190
我们能够看到这个双线性方程
可以写成如下形式：

53
00:03:17.190 --> 00:03:20.630
在这里我们看到两个区域的神经元活动的变化，

54
00:03:20.630 --> 00:03:25.630
区域1和区域2，不仅依赖于当前时间点Z1和Z2区域的神经元活动

55
00:03:25.630 --> 00:03:30.580
同时也依赖于输入u1和u2。

56
00:03:34.210 --> 00:03:38.560
接下来，神经活动引起了血容量和

57
00:03:38.560 --> 00:03:43.240
脱氧血红蛋白的变化，
而这些变化又引起了观察到的BOLD信号的变化。

58
00:03:43.240 --> 00:03:46.990
所以DCM模型中的血流动力学是用所谓的

59
00:03:46.990 --> 00:03:51.880
extended Balloon model来描述的,
它包括一组血流动力学状态变量、

60
00:03:51.880 --> 00:03:55.155
状态方程和血流动力学参数 （theta^h）.

61
00:03:57.185 --> 00:04:00.535
Extended Balloon Model长成这个样子, 

62
00:04:00.535 --> 00:04:01.315
显然它不适合那些胆小的人。

63
00:04:01.315 --> 00:04:05.336
这组微分方程展示了

64
00:04:05.336 --> 00:04:10.147
活动依赖信号（activity-dependent signal）、流量感应（flow induction）、血容量

65
00:04:10.147 --> 00:04:14.890
以及脱氧血红蛋白的变化导致的血流动力学响应的变化。

66
00:04:14.890 --> 00:04:16.920
我们不打算详细讨论这个，

67
00:04:16.920 --> 00:04:20.720
只是想让你们知道是有这样的方程存在的。

68
00:04:22.280 --> 00:04:25.090
现在，总结一下所有这些信息，

69
00:04:25.090 --> 00:04:28.100
我们有很多不同的状态方程
而一会儿我们会在DCM中使用这些状态方程


70
00:04:29.160 --> 00:04:35.540
所以，我们获得了能够描述了神经元
活动的神经元状态——Z_t

71
00:04:35.540 --> 00:04:39.207
而这些Z_t带有一些我们称之为theta^c的参数

72
00:04:39.207 --> 00:04:44.260
然后是血流动力学状态，
它依赖于s_t、

73
00:04:44.260 --> 00:04:45.820
f_t、v_t以及q_t。

74
00:04:47.330 --> 00:04:53.820
观察到的数据是q_t和v_t的函数。

75
00:04:53.820 --> 00:04:58.010
我们不会详细讨论这个，
但我只想让你们知道

76
00:04:58.010 --> 00:05:01.180
存在这样一个函数，它有参数theta^h

77
00:05:03.310 --> 00:05:04.990
我们可以结合神经

78
00:05:04.990 --> 00:05:09.500
和血液动力学状态，
得到如下状态空间模型。

79
00:05:09.500 --> 00:05:13.290
这是一种人们知道如何求解的
标准状态空间模型。

80
00:05:14.350 --> 00:05:19.600
DCM分析基本上是用
贝叶斯方法进行的。

81
00:05:19.600 --> 00:05:23.610
正常的先验被放置在
未知的theta的这里

82
00:05:23.610 --> 00:05:28.560
后验密度用于推断连接

83
00:05:28.560 --> 00:05:33.170
最后是模型比较，不同建议模型之间的比较可以

84
00:05:33.170 --> 00:05:36.620
可以用来确定数据是否偏向其中一个模型。

85
00:05:36.620 --> 00:05:41.530
这是使用贝叶斯模型比较完成的。

86
00:05:41.530 --> 00:05:45.380
所以，有一种叫做模型证据（model evidence）
的东西，它是数据的概率

87
00:05:45.380 --> 00:05:49.170
给定一个特定的模型，
它可以用下面的方法来计算。

88
00:05:50.620 --> 00:05:53.210
现在，为了比较模型，
我们计算一个叫做

89
00:05:53.210 --> 00:05:54.500
贝叶斯因子的东西。

90
00:05:54.500 --> 00:05:58.598
我们这里的贝叶斯因子，
是这个我们称之为B_ij的东东，


91
00:05:58.598 --> 00:06:02.488
它基本上是模型i的模型证据

92
00:06:02.488 --> 00:06:08.010
与模型j的模型证据的比值。

93
00:06:08.010 --> 00:06:13.211
所以当B_ij比较大的时候，
这里的大是指比1大

94
00:06:13.211 --> 00:06:15.936
那么i比j大

95
00:06:15.936 --> 00:06:21.414
如果B_ij小于1的话，
那么j就比i大

96
00:06:21.414 --> 00:06:25.248
为了计算这个，
存在各种各样的近似方法

97
00:06:25.248 --> 00:06:28.160
包括负自由能，AIC, BIC。

98
00:06:28.160 --> 00:06:32.580
所有这些都已经在SPM软件中被实现了。

99
00:06:32.580 --> 00:06:33.320
插一句，SPM是神经图像领域中
应用的最为广泛的一套软件。

100
00:06:35.470 --> 00:06:40.060
这里是UCL（SPM开发者）
给出的一个例子

101
00:06:40.060 --> 00:06:44.240
这里他们给出了三个不同的用于比较的模型

102
00:06:44.240 --> 00:06:48.148
他们使用了贝叶斯因子
来比较三个不同的候选DCM

103
00:06:48.148 --> 00:06:50.860
并从中找出最有可能的一个。

104
00:06:50.860 --> 00:06:55.330
这一讲就到这里。

105
00:06:55.330 --> 00:06:59.880
这里，我只是想让你们对什么是
动态因果模型有一个简单的了解。

106
00:06:59.880 --> 00:07:02.680
同样，这些都已经在SPM软件中实现了。

107
00:07:02.680 --> 00:07:06.660
尽管这些内容都很数学，但是

108
00:07:06.660 --> 00:07:10.290
但我只是想让你们对这些事情有一个基本的感觉，

109
00:07:10.290 --> 00:07:13.510
这样你们就可以阅读关于它的论文，
并有一个大致的概念理解。

110
00:07:13.510 --> 00:07:15.680
好的。
在下一讲中，我们将讨论

111
00:07:15.680 --> 00:07:16.410
Granger causality.

112
00:07:16.410 --> 00:07:17.328
一会儿见.

113
00:07:17.328 --> 00:07:18.626
再见.

114
00:07:18.626 --> 00:07:21.083
[效果音]